/* 
Lock and wait for all processes to reach a certain point
Unlock
Lock again after all threads have passed through so that the barrier
can be reused
*/
/*
A working barrier 

wait(mutex)
    count++
signal(mutex)
if (count == n) signal(barrier)
wait(barrier) //turnstile
signal(barrier) //the nth thread did these and let all threads go through
//critical point
*/

1 # rendezvous
2
3 mutex . wait ()
4 count += 1
5 if count == n:
6 turnstile2 . wait () # lock the second
7 turnstile . signal () # unlock the first
8 mutex . signal ()
9
10 turnstile . wait () # first turnstile
11 turnstile . signal ()
12
13 # critical point
14
15 mutex . wait ()
16 count -= 1
17 if count == 0:
18 turnstile . wait () # lock the first
19 turnstile2 . signal () # unlock the second
20 mutex . signal ()
21
22 turnstile2 . wait () # second turnstile
23 turnstile2 . signal ()
